"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"GoogleAuth",{enumerable:!0,get:function(){return i}});const e=require("@google-cloud/local-auth"),t=require("google-auth-library"),s=require("jnu-abc");function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const n=({user:e="bigwhitekmc",sn:t=0,scopeDir:o=""}={})=>{let n=o?(0,s.loadJson)(`${o}/scopes_${e}_${t}.json`)??(0,s.loadJson)(`${o}/scopes_default.json`):{};return console.log("Loaded scopes:",n),n};class i{async loadSavedCredentialsIfExist(){try{console.log("Loading credentials from:",this.tokenPath);let e=(0,s.loadJson)(this.tokenPath);if(console.log("Loaded credentials:",e?"(exists)":"(not found)"),!e||!e.refresh_token)return console.log("No valid credentials found"),null;console.log("Loading OAuth2 keys from:",this.crendentialsPath);let o=(0,s.loadJson)(this.crendentialsPath),n=o.installed||o.web;if(console.log("OAuth2 key loaded:",n?"(exists)":"(not found)"),!n||!n.client_id||!n.client_secret)return console.log("Invalid OAuth2 keys"),null;let i=new t.OAuth2Client({clientId:n.client_id,clientSecret:n.client_secret,redirectUri:n.redirect_uris[0]}),r={access_token:e.access_token,refresh_token:e.refresh_token,scope:this.scopes.join(" "),token_type:e.token_type||"Bearer",expiry_date:e.expiry_date};console.log("Setting credentials with token:",{hasAccessToken:!!r.access_token,hasRefreshToken:!!r.refresh_token,scope:r.scope,tokenType:r.token_type,expiryDate:r.expiry_date?new Date(r.expiry_date).toISOString():"not set"}),i.setCredentials(r);let a=r.expiry_date;if(!a||Date.now()>=a-3e4||!r.access_token){console.log("Token is expired or missing access token, refreshing...");try{let{credentials:e}=await i.refreshAccessToken();i.setCredentials(e),await this.saveCredentials(i),console.log("Token refreshed successfully")}catch(e){return console.error("Error refreshing token:",e),console.log("Authentication required"),null}}return i}catch(e){return console.error("Error loading credentials:",e),null}}async saveCredentials(e){try{console.log("Saving credentials...");let t=(0,s.loadJson)(this.crendentialsPath),o=t.installed||t.web,n={type:"authorized_user",client_id:o.client_id,client_secret:o.client_secret,refresh_token:e.credentials.refresh_token,access_token:e.credentials.access_token,scope:this.scopes.join(" "),token_type:e.credentials.token_type||"Bearer",expiry_date:e.credentials.expiry_date};console.log("Saving credentials to:",this.tokenPath),(0,s.saveJson)(this.tokenPath,n),console.log("Credentials saved successfully")}catch(e){throw console.error("Error saving credentials:",e),e}}async authorize(){console.log("Starting authorization process...");let t=await this.loadSavedCredentialsIfExist();return t||(console.log("No valid credentials found, starting new authentication..."),(t=await (0,e.authenticate)({scopes:this.scopes,keyfilePath:this.crendentialsPath})).credentials&&(console.log("New authentication successful, saving credentials..."),await this.saveCredentials(t))),t}constructor({user:e="bigwhitekmc",type:t="oauth2",sn:s=0,scopeDir:i="",authDir:r=""}={}){o(this,"tokenPath",""),o(this,"crendentialsPath",""),o(this,"scopes",void 0),console.log("Initializing GoogleAuth with:",{user:e,type:t,sn:s,scopeDir:i,authDir:r}),this.scopes=n({user:e,sn:s,scopeDir:i}),"oauth2"===t&&(this.tokenPath=`${r}/token_${e}_${s}.json`,this.crendentialsPath=`${r}/${t}_${e}_${s}.json`),console.log("Paths:",{tokenPath:this.tokenPath,credentialsPath:this.crendentialsPath})}}
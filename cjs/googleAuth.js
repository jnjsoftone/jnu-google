"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"GoogleAuth",{enumerable:!0,get:function(){return k}});const e=require("@google-cloud/local-auth"),t=require("google-auth-library"),o=require("jnu-cloud"),s=/*#__PURE__*/l(require("fs")),n=/*#__PURE__*/l(require("os")),i=/*#__PURE__*/l(require("path"));function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,o=new WeakMap;return(a=function(e){return e?o:t})(e)}function l(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var o=a(t);if(o&&o.has(e))return o.get(e);var s={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var r=n?Object.getOwnPropertyDescriptor(e,i):null;r&&(r.get||r.set)?Object.defineProperty(s,i,r):s[i]=e[i]}return s.default=e,o&&o.set(e,s),s}const{ENV_GITHUB_OWNER:c,ENV_GITHUB_REPO:h,ENV_GITHUB_TOKEN:d}=process.env,u={owner:c||"",repo:h||"",token:d||""},p=async e=>(0,o.loadJsonFromGithub)(e,u),g=async(e,t)=>{(0,o.saveJsonToGithub)(e,t,u)},f=async({user:e="bigwhitekmc",sn:t=0,scopeDir:o=""}={})=>{let s=o?await p(`${o}scopes_${e}_${t}.json`)??await p(`${o}scopes_default.json`):[];return console.log("getScopes Loaded scopes1:",s),s&&Array.isArray(s)&&0!==s.length||(console.log("Invalid or empty scopes detected, using default scopes"),s=["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"]),console.log("Loaded scopes2:",s),s};class k{async init({user:e="bigwhitekmc",sn:t=0}={}){return this.scopes=await f({user:e,sn:t,scopeDir:this.scopeDir}),console.log(`init SCOPES: ${this.scopes}`),this.scopes&&0!==this.scopes.length||(console.log("Empty scopes after initialization, setting default scopes"),this.scopes=["https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/drive.file"]),console.log("Initialized scopes:",this.scopes),this}async loadSavedCredentialsIfExist(){try{console.log("Loading credentials from:",this.tokenPath);let e=await p(this.tokenPath);if(console.log("Loaded credentials:",e?"(exists)":"(not found)"),!e)return console.log("No credentials found"),null;console.log("Loading OAuth2 keys from:",this.crendentialsPath);let o=await p(this.crendentialsPath);if(!o)return console.log("No OAuth2 keys found"),null;let s=o.installed||o.web;if(console.log("OAuth2 key loaded:",s?"(exists)":"(not found)"),!s||!s.client_id||!s.client_secret)return console.log("Invalid OAuth2 keys"),null;let n=new t.OAuth2Client({clientId:s.client_id,clientSecret:s.client_secret,redirectUri:s.redirect_uris[0]}),i={access_token:e.access_token,refresh_token:e.refresh_token,scope:this.scopes.join(" "),token_type:e.token_type||"Bearer",expiry_date:e.expiry_date};console.log("Setting credentials with token:",{hasAccessToken:!!i.access_token,hasRefreshToken:!!i.refresh_token,scope:i.scope,tokenType:i.token_type,expiryDate:i.expiry_date?new Date(i.expiry_date).toISOString():"not set"}),n.setCredentials(i);let r=i.expiry_date;if((!r||Date.now()>=r-3e4)&&i.refresh_token){console.log("Token is expired or about to expire, refreshing...");try{let{credentials:e}=await n.refreshAccessToken();n.setCredentials(e),await this.saveCredentials(n),console.log("Token refreshed successfully")}catch(t){if(console.error("Error refreshing token:",t),t.message&&"string"==typeof t.message&&t.message.includes("invalid_grant")){console.log("Invalid grant error detected. Removing token file and starting new authentication.");try{await g(this.tokenPath,{}),console.log(`Token file cleared: ${this.tokenPath}`)}catch(e){console.error("Failed to clear token file:",e)}return null}if(!e.refresh_token)return console.log("No refresh token available, authentication required"),null}}return n}catch(e){return console.error("Error loading credentials:",e),null}}async saveCredentials(e){try{console.log("Saving credentials...");let t=await p(this.crendentialsPath);if(!t)throw console.error("OAuth2 keys not found"),Error("OAuth2 keys not found");let o=t.installed||t.web;if(!e.credentials.refresh_token){console.log("No refresh token in credentials, keeping existing one");let t=await p(this.tokenPath);t?.refresh_token&&(e.credentials.refresh_token=t.refresh_token)}let s={type:"authorized_user",client_id:o.client_id,client_secret:o.client_secret,refresh_token:e.credentials.refresh_token,access_token:e.credentials.access_token,scope:this.scopes.join(" "),token_type:e.credentials.token_type||"Bearer",expiry_date:e.credentials.expiry_date};console.log("Saving credentials to:",this.tokenPath),await g(this.tokenPath,s),console.log("Credentials saved successfully")}catch(e){throw console.error("Error saving credentials:",e),e}}async authorize(){console.log("Starting authorization process..."),this.scopes&&0!==this.scopes.length||(console.log("No scopes defined, initializing with default scopes"),await this.init()),console.log("Using scopes:",this.scopes);let t=await this.loadSavedCredentialsIfExist();if(t)try{let e=await t.getTokenInfo(t.credentials.access_token||"");return console.log("Token is valid:",e?.scopes),t}catch(e){console.error("Token validation failed:",e?.message||"Unknown error"),console.log("Proceeding with new authentication...")}else console.log("No valid credentials found, starting new authentication...");let o=await p(this.crendentialsPath);if(!o)throw Error("OAuth2 키 파일을 GitHub에서 찾을 수 없습니다: "+this.crendentialsPath);let r=s.mkdtempSync(i.join(n.tmpdir(),"google-auth-")),a=i.join(r,"oauth2-keys.json");try{return s.writeFileSync(a,JSON.stringify(o,null,2)),console.log("OAuth2 키 파일을 임시 위치에 저장했습니다:",a),console.log("Authenticating with scopes:",this.scopes),(t=await (0,e.authenticate)({scopes:this.scopes,keyfilePath:a})).credentials&&(console.log("New authentication successful, saving credentials..."),await this.saveCredentials(t)),t}finally{try{s.existsSync(a)&&s.unlinkSync(a),s.rmdirSync(r),console.log("임시 파일 정리 완료")}catch(e){console.warn("임시 파일 정리 중 오류 발생:",e)}}}constructor({user:e="bigwhitekmc",type:t="oauth2",sn:o=0,scopeDir:s="Apis/google/spec",authDir:n="Apis/google"}={}){r(this,"tokenPath",""),r(this,"crendentialsPath",""),r(this,"scopeDir",""),r(this,"scopes",void 0),console.log("Initializing GoogleAuth with:",{user:e,type:t,sn:o,scopeDir:s,authDir:n}),this.scopeDir=s,this.scopes=[],"oauth2"===t&&(this.tokenPath=`${n}token_${e}_${o}.json`.replace(/^\//,""),this.crendentialsPath=`${n}${t}_${e}_${o}.json`.replace(/^\//,"")),console.log("Paths:",{tokenPath:this.tokenPath,credentialsPath:this.crendentialsPath})}}
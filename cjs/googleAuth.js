"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"GoogleAuth",{enumerable:!0,get:function(){return i}});const e=require("@google-cloud/local-auth"),t=require("google-auth-library"),r=require("jnu-abc");function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const n=({user:e="bigwhitekmc",sn:t=0,scopeDir:s=""}={})=>s?(0,r.loadJson)(`${s}/scopes_${e}_${t}.json`)??(0,r.loadJson)(`${s}/scopes_default.json`):{};class i{async loadSavedCredentialsIfExist(){try{let e=(0,r.loadJson)(this.tokenPath);if(!e)return null;let s=(0,r.loadJson)(this.crendentialsPath),n=s.installed||s.web,i=new t.OAuth2Client({clientId:n.client_id,clientSecret:n.client_secret,redirectUri:n.redirect_uris[0]});return i.setCredentials({access_token:e.access_token,refresh_token:e.refresh_token,expiry_date:e.expiry_date,token_type:"Bearer"}),i}catch(e){return console.error("Error loading credentials:",e),null}}async saveCredentials(e){try{let t=(0,r.loadJson)(this.crendentialsPath),s=t.installed||t.web,n={type:"authorized_user",client_id:s.client_id,client_secret:s.client_secret,refresh_token:e.credentials.refresh_token,access_token:e.credentials.access_token,expiry_date:e.credentials.expiry_date,token_type:"Bearer"};(0,r.saveJson)(this.tokenPath,n)}catch(e){throw console.error("Error saving credentials:",e),e}}async authorize(){let t=await this.loadSavedCredentialsIfExist();if(t)try{let e=t.credentials.expiry_date;if(e&&Date.now()>=e-3e4){console.log("Token is expired or about to expire, refreshing...");let{credentials:e}=await t.refreshAccessToken();t.setCredentials(e),await this.saveCredentials(t)}return t}catch(e){console.error("Error refreshing access token:",e),t=null}return(t=await (0,e.authenticate)({scopes:this.scopes,keyfilePath:this.crendentialsPath})).credentials&&await this.saveCredentials(t),t}constructor({user:e="bigwhitekmc",type:t="oauth2",sn:r=0,scopeDir:i="",authDir:a=""}={}){s(this,"tokenPath",""),s(this,"crendentialsPath",""),s(this,"scopes",void 0),this.scopes=n({user:e,sn:r,scopeDir:i}),"oauth2"===t&&(this.tokenPath=`${a}/token_${e}_${r}.json`,this.crendentialsPath=`${a}/${t}_${e}_${r}.json`)}}
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"GoogleAuth",{enumerable:!0,get:function(){return i}});const e=require("@google-cloud/local-auth"),t=require("googleapis"),s=require("jnu-abc");function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const a=({user:e="bigwhitekmc",sn:t=0,scopeDir:r=""}={})=>r?(0,s.loadJson)(`${r}/scopes_${e}_${t}.json`)??(0,s.loadJson)(`${r}/scopes_default.json`):{};class i{async loadSavedCredentialsIfExist(){try{let e=(0,s.loadJson)(this.tokenPath),r=JSON.parse(e);return t.google.auth.fromJSON(r)}catch(e){return null}}async saveCredentials(e){let t=JSON.parse((0,s.loadJson)(this.crendentialsPath)),r=t.installed||t.web,a=JSON.stringify({type:"authorized_user",client_id:r.client_id,client_secret:r.client_secret,refresh_token:e.credentials.refresh_token,expiry_date:e.credentials.expiry_date});(0,s.saveJson)(this.tokenPath,a)}async authorize(){let t=await this.loadSavedCredentialsIfExist();if(t)try{let e=t.credentials.expiry_date;if(e&&Date.now()>=e-3e4){console.log("Token is expired or about to expire, refreshing...");let{credentials:e}=await t.refreshAccessToken();t.setCredentials(e),await this.saveCredentials(t)}return t}catch(e){console.error("Error refreshing access token:",e),t=null}return(t=await (0,e.authenticate)({scopes:this.scopes,keyfilePath:this.crendentialsPath})).credentials&&await this.saveCredentials(t),t}constructor({user:e="bigwhitekmc",type:t="oauth2",sn:s=0,scopeDir:i="",authDir:n=""}={}){r(this,"tokenPath",""),r(this,"crendentialsPath",""),r(this,"scopes",void 0),this.scopes=a({user:e,sn:s,scopeDir:i}),"oauth2"===t&&(this.tokenPath=`${n}/token_${e}_${s}.json`,this.crendentialsPath=`${n}/${t}_${e}_${s}.json`)}}
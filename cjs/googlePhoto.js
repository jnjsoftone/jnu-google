"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"GooglePhoto",{enumerable:!0,get:function(){return s}});const e=require("./googleAuth.js");function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{async init(){await this.googleAuth.init();let e=await this.googleAuth.authorize();this.service={auth:e,makeRequest:async(t,s="GET",a)=>{let i=`https://photoslibrary.googleapis.com/v1${t}`,r={method:s,headers:{Authorization:`Bearer ${e.credentials.access_token}`,"Content-Type":"application/json"},body:a?JSON.stringify(a):void 0};return(await fetch(i,r)).json()}}}async getAlbums(e=50,t){let s=new URLSearchParams;return s.append("pageSize",e.toString()),t&&s.append("pageToken",t),this.service.makeRequest(`/albums?${s.toString()}`)}async getAlbum(e){return this.service.makeRequest(`/albums/${e}`)}async createAlbum(e,t){return this.service.makeRequest("/albums","POST",{title:e,coverPhotoBaseUrl:t})}async addMediaItemsToAlbum(e,t){return this.service.makeRequest(`/albums/${e}:batchAddMediaItems`,"POST",{mediaItemIds:t})}async removeMediaItemsFromAlbum(e,t){return this.service.makeRequest(`/albums/${e}:batchRemoveMediaItems`,"POST",{mediaItemIds:t})}async getMediaItems(e=100,t){let s=new URLSearchParams;return s.append("pageSize",e.toString()),t&&s.append("pageToken",t),this.service.makeRequest(`/mediaItems?${s.toString()}`)}async getMediaItem(e){return this.service.makeRequest(`/mediaItems/${e}`)}async searchMediaItems(e={}){let{albumIds:t,mediaTypes:s,orderBy:a,pageSize:i=100,pageToken:r}=e,n={pageSize:i};return t&&t.length>0&&(n.albumIds=t),s&&s.length>0&&(n.mediaTypes=s),a&&(n.orderBy=a),r&&(n.pageToken=r),this.service.makeRequest("/mediaItems:search","POST",n)}async uploadMediaItem(e,t,s){return this.service.makeRequest("/mediaItems:batchCreate","POST",{newMediaItems:[{description:e,simpleMediaItem:{uploadToken:s,fileName:e,mimeType:t}}]})}async deleteMediaItem(e){return this.service.makeRequest(`/mediaItems/${e}`,"DELETE")}async deleteAlbum(e){return this.service.makeRequest(`/albums/${e}`,"DELETE")}async updateAlbum(e,t){return this.service.makeRequest(`/albums/${e}`,"PATCH",t)}constructor({user:s="bigwhitekmc",type:a="oauth2",sn:i=0,scopeDir:r="Apis/google/spec/",authDir:n="Apis/google/"}={}){t(this,"service",void 0),t(this,"googleAuth",void 0),this.googleAuth=new e.GoogleAuth({user:s,type:a,sn:i,scopeDir:r,authDir:n})}}
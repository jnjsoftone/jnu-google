function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}import{authenticate as t}from"@google-cloud/local-auth";import{OAuth2Client as r}from"google-auth-library";import{loadJson as s,saveJson as i}from"jnu-abc";let n=({user:e="bigwhitekmc",sn:t=0,scopeDir:r=""}={})=>r?s(`${r}/scopes_${e}_${t}.json`)??s(`${r}/scopes_default.json`):{};export class GoogleAuth{async loadSavedCredentialsIfExist(){try{let e=s(this.tokenPath);if(!e)return null;let t=s(this.crendentialsPath),i=t.installed||t.web,n=new r({clientId:i.client_id,clientSecret:i.client_secret,redirectUri:i.redirect_uris[0]});return n.setCredentials({access_token:e.access_token,refresh_token:e.refresh_token,expiry_date:e.expiry_date,token_type:"Bearer"}),n}catch(e){return console.error("Error loading credentials:",e),null}}async saveCredentials(e){try{let t=s(this.crendentialsPath),r=t.installed||t.web,n={type:"authorized_user",client_id:r.client_id,client_secret:r.client_secret,refresh_token:e.credentials.refresh_token,access_token:e.credentials.access_token,expiry_date:e.credentials.expiry_date,token_type:"Bearer"};i(this.tokenPath,n)}catch(e){throw console.error("Error saving credentials:",e),e}}async authorize(){let e=await this.loadSavedCredentialsIfExist();if(e)try{let t=e.credentials.expiry_date;if(t&&Date.now()>=t-3e4){console.log("Token is expired or about to expire, refreshing...");let{credentials:t}=await e.refreshAccessToken();e.setCredentials(t),await this.saveCredentials(e)}return e}catch(t){console.error("Error refreshing access token:",t),e=null}return(e=await t({scopes:this.scopes,keyfilePath:this.crendentialsPath})).credentials&&await this.saveCredentials(e),e}constructor({user:t="bigwhitekmc",type:r="oauth2",sn:s=0,scopeDir:i="",authDir:a=""}={}){e(this,"tokenPath",""),e(this,"crendentialsPath",""),e(this,"scopes",void 0),this.scopes=n({user:t,sn:s,scopeDir:i}),"oauth2"===r&&(this.tokenPath=`${a}/token_${t}_${s}.json`,this.crendentialsPath=`${a}/${r}_${t}_${s}.json`)}}